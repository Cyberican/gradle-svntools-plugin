/**
 * Publishing to Bintray (see https://github.com/etiennestuder/gradle-plugindev-plugin/):
 *
 * gradlew -i publishPluginToBintray -PbintrayUser=[username] -PbintrayApiKey=[api-key]
 */
plugins {
  id "java-gradle-plugin"
  id "groovy"
  id "idea"
  id "nu.studer.plugindev" version "1.0.3"
}

group = "at.bxm.gradleplugins"
version = "1.2-SNAPSHOT"

dependencies {
  compile "org.codehaus.groovy:groovy-all:2.3.6"
  compile "org.tmatesoft.svnkit:svnkit:1.8.5"
  testCompile("org.spockframework:spock-core:0.7-groovy-2.0") {
    exclude group: "org.codehaus.groovy"
  }
}

plugindev { // https://github.com/etiennestuder/gradle-plugindev-plugin
  pluginId "at.bxm.svntools"
  pluginImplementationClass "at.bxm.gradleplugins.svntools.SvnToolsPlugin"
  pluginDescription "Provides various Subversion tasks that operate on a local SVN workspace"
  pluginLicenses "MIT"
  pluginTags "subversion", "svn", "svnkit", "scm"
  authorId "martoe"
  authorName "Martin Ehrnhoefer"
  authorEmail "martin@ehrnhoefer.com"
  projectUrl "https://github.com/martoe/gradle-svntools-plugin"
  projectInceptionYear "2014"
  done()
}

bintray { // https://github.com/bintray/gradle-bintray-plugin
  if (project.hasProperty("bintrayUser")) {
    user = "$bintrayUser"
    key = "$bintrayApiKey"
  } else {
    user = "dummy"
    key = "dummy"
    dryRun = true
  }
  pkg {
    repo = "gradle-plugins"
    version {
      name = project.version
      desc = "New 'SvnBranch' and 'SvnCheckout' tasks"
      released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")
      vcsTag = "v$project.version"
    }
  }
}
bintrayUpload.dependsOn check

if (project.hasProperty("ignoreTestFailures")) {
  test {
    ignoreFailures = ignoreTestFailures == "true"
  }
}
